version: '3.4'

services:
  gatewayapi:
    image: 'gatewayapi'
    container_name: 'gatewayapi-container'
    build: 
      context: .
      dockerfile: ./Gateway/Gateway.API/Dockerfile
      args:
        ENV: ${ENVIRONMENT}
    ports:
      - '${GatewayAPIPort}:80'
    depends_on:
      - registerdb
    restart: always
    networks:
      - gateway-network
      
  registerapi:
    image: 'registerapi'
    container_name: 'registerapi-container'
    build: 
      context: .
      dockerfile: ./Register/Register.API/Dockerfile
      args:
        ENV: ${ENVIRONMENT}
    ports:
      - '${RegisterAPIPort}:80'
    depends_on:
      - registerdb
    restart: always
    networks:
      - gateway-network
      - register-network
      
  registerdb:
    image: 'postgres:13-alpine'
    container_name: 'registerdb-container'
    environment:
      - POSTGRES_DB=${PostgreRegisterDB}
      - POSTGRES_USER=${PostgreUser}
      - POSTGRES_PASSWORD=${PostgrePassword}
    ports:
      - '${PostgrePort}:5432'
    volumes:
      - register-volume:/var/lib/postgresql/data
    restart: always
    networks:
      - register-network
  
  logconsumer:
    image: 'logconsumer'
    container_name: 'logconsumer-container'
    build: 
      context: .
      dockerfile: ./LogQueue/LogQueue.Consumer/Dockerfile
      args:
        ENV: ${ENVIRONMENT}
    depends_on:
      - logdb
    restart: always
    networks:
      - log-network
  
  logdb:
    image: 'mongo'
    container_name: 'logdb-container'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MongoUser}
      - MONGO_INITDB_ROOT_PASSWORD=${MongoPassword}
    ports:
      - '${MongoPort}:27017'
    volumes:
      - log-volume:/data/db
    restart: always
    networks:
      - log-network
      
  rabbitmq: # login guest:guest
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq-container'
    hostname: 'rabbitmq'
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - log-network
    
  redis:
    image: redis:alpine
    container_name: 'redis-container'
    hostname: 'localhost'
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - gateway-network

volumes:
  register-volume:
  log-volume:
  redis-data:

networks:
  register-network:
    driver: bridge
  gateway-network:
    driver: bridge
  log-network:
    driver: bridge
